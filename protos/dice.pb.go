// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dice.proto

package tutorial

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type RollDiceRequest struct {
	Num                  int32    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollDiceRequest) Reset()         { *m = RollDiceRequest{} }
func (m *RollDiceRequest) String() string { return proto.CompactTextString(m) }
func (*RollDiceRequest) ProtoMessage()    {}
func (*RollDiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b290fdc790cf24c0, []int{0}
}

func (m *RollDiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollDiceRequest.Unmarshal(m, b)
}
func (m *RollDiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollDiceRequest.Marshal(b, m, deterministic)
}
func (m *RollDiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollDiceRequest.Merge(m, src)
}
func (m *RollDiceRequest) XXX_Size() int {
	return xxx_messageInfo_RollDiceRequest.Size(m)
}
func (m *RollDiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RollDiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RollDiceRequest proto.InternalMessageInfo

func (m *RollDiceRequest) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

// The response message containing the greetings
type RollDiceReply struct {
	Dice                 []string `protobuf:"bytes,1,rep,name=dice,proto3" json:"dice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollDiceReply) Reset()         { *m = RollDiceReply{} }
func (m *RollDiceReply) String() string { return proto.CompactTextString(m) }
func (*RollDiceReply) ProtoMessage()    {}
func (*RollDiceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_b290fdc790cf24c0, []int{1}
}

func (m *RollDiceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollDiceReply.Unmarshal(m, b)
}
func (m *RollDiceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollDiceReply.Marshal(b, m, deterministic)
}
func (m *RollDiceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollDiceReply.Merge(m, src)
}
func (m *RollDiceReply) XXX_Size() int {
	return xxx_messageInfo_RollDiceReply.Size(m)
}
func (m *RollDiceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RollDiceReply.DiscardUnknown(m)
}

var xxx_messageInfo_RollDiceReply proto.InternalMessageInfo

func (m *RollDiceReply) GetDice() []string {
	if m != nil {
		return m.Dice
	}
	return nil
}

func init() {
	proto.RegisterType((*RollDiceRequest)(nil), "RollDiceRequest")
	proto.RegisterType((*RollDiceReply)(nil), "RollDiceReply")
}

func init() { proto.RegisterFile("dice.proto", fileDescriptor_b290fdc790cf24c0) }

var fileDescriptor_b290fdc790cf24c0 = []byte{
	// 139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xc9, 0x4c, 0x4e,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x52, 0xe6, 0xe2, 0x0f, 0xca, 0xcf, 0xc9, 0x71, 0xc9,
	0x4c, 0x4e, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe0, 0x62, 0xce, 0x2b, 0xcd,
	0x95, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x02, 0x31, 0x95, 0x94, 0xb9, 0x78, 0x11, 0x8a, 0x0a,
	0x72, 0x2a, 0x85, 0x84, 0xb8, 0x58, 0x40, 0x66, 0x48, 0x30, 0x2a, 0x30, 0x6b, 0x70, 0x06, 0x81,
	0xd9, 0x46, 0x56, 0x5c, 0x1c, 0x21, 0xa5, 0x25, 0xf9, 0x45, 0x99, 0x89, 0x39, 0x42, 0x7a, 0x5c,
	0x1c, 0x30, 0x0d, 0x42, 0x02, 0x7a, 0x68, 0x16, 0x48, 0xf1, 0xe9, 0xa1, 0x98, 0xa6, 0xc4, 0xe0,
	0xc4, 0x13, 0xc5, 0xa5, 0xa7, 0x5f, 0x02, 0xd5, 0x9d, 0xc4, 0x06, 0x76, 0x9a, 0x31, 0x20, 0x00,
	0x00, 0xff, 0xff, 0x45, 0xce, 0x6b, 0x29, 0xa8, 0x00, 0x00, 0x00,
}
